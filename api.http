### Products
GET http://localhost:3000/products

###
POST http://localhost:3000/products
Content-Type: application/json

{
    "name": "Product 1",
    "quantity": 10,
    "price": 100
}

### 
@product_id = 40fa3287-2187-4f2f-bb94-9d1e2862c432

### Customers
GET http://localhost:3000/customers

###
POST http://localhost:3000/customers
Content-Type: application/json

{
    "name": "Customer 1",
    "email": "customer@customer.com",
    "address": "Customer Address",
    "phone": "123456789"
}

###
@customer_id = 61e08787-e521-4eb4-85eb-c629e283bb79

### Orders
GET http://localhost:3000/orders

###
POST http://localhost:3000/orders
Content-Type: application/json

{
    "customer_id": "{{customer_id}}",
    "items": [
        {
            "product_id": "{{product_id}}",
            "quantity": 1
        }
    ]
}

# orders --- sincrono (criacao do pedido, criacao da fatura, pagamento)
# processos de longa duração - 
# order orquestrator service
    # order created -> invoice created -> invoice payed -> order approved
#                    -> invoice rejected -> order canceled -> enviar mail

# orquestação e coerografia

# orders --  assincrona - enviar o evento de integração via rabbitmq --- mailer

## processar o pedido

#OrderCreated
#InvoiceCreated
#InvoicePayed
#OrderApproved


//---
#DebitEvent
#CreditEvent - 31/01/2023 (saldo daquele dia)
# snapshot (instantaneo) Conta - 1000
#CreditEvent
#DebitEvent
#
#
#
#          - 20/06/2023